---
version: "3"
# **********************************************************************************************
services:
  # --------------------------------------------------------------------------------------------
  detectrx-db:
    container_name: 'detectrx-db'
    hostname: 'detectrx-db'
    image: 'docker.iatric.com/detectrx-db:1.0.2.1'
    environment:
      TZ: 'UTC'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_PASSWORD: ${MYSQL_DB_PASSWORD}
      MYSQL_DATABASE: 'detectrx'
      DOCKER_HOSTNAME: 'localhost'
      DOCKER_HOSTIPADDR: '127.0.0.1'
      CLIENT_CODE: ${SITE_CODE}
      CLIENT_TEXT_DESCRIPTION: 'iatricSystems ${ENVIRONMENT} System'
      PATH: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
      TERM: 'xterm'
      GOSU_VERSION: '1.12'
      PRODUCTION: 'true'
    volumes:
      - 'detectrx-db:/var/lib/mysql'
    ports:
      - "3316:3306"
    logging:
      driver: "json-file"
    restart: "always"
    networks:
      - "detectrx-subnet-local"
    healthcheck:
      test: ["CMD-SHELL", 'mysql --database=detectrx --password=${MYSQL_ROOT_PASSWORD} --execute="SELECT count(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B']
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 60s
  # --------------------------------------------------------------------------------------------
  solomon-db:
    container_name: 'solomon-db'
    hostname: 'solomon-db'
    image: 'docker.iatric.com/solomon-db:2.1.4'
    mem_limit: 17179869184
    command:
      - "/mnt/entrypoint.sh"
    environment:
      TZ: UTC
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_PASSWORD: ${MYSQL_DB_PASSWORD}
      DOCKER_HOSTNAME: 'localhost'
      DOCKER_HOSTIPADDR: '127.0.0.1'
      CLIENT_CODE: ${SITE_CODE}
      CLIENT_TEXT_DESCRIPTION: 'iatricSystems ${ENVIRONMENT} System'
      PATH: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
      TERM: 'xterm'
      GOSU_VERSION: '1.12'
      MYSQL_DATABASE: 'solomon'
      PRODUCTION: 'true'
    volumes:
      - "db-backup-solomon-local:/mnt/backup"
      - "all-logs-local:/mnt/log"
      - "config-ini-solomon-local:/mnt/config"
      - "solomon-db-files-local:/var/lib/mysql"
    working_dir: "/solomon/data"
    ports:
      - "3335:3306"
    logging:
      driver: "json-file"
    restart: "always"
    networks:
      - "detectrx-subnet-local"
    healthcheck:
      test: ["CMD-SHELL", 'mysql --database=solomon --password=${MYSQL_ROOT_PASSWORD} --execute="SELECT count(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B']
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 60s
  # --------------------------------------------------------------------------------------------
  detectrx-solomon:
    container_name: 'detectrx-solomon'
    hostname: 'solomon-drug-div'
    image: 'docker.iatric.com/solomon-drug-div:1.0.2.1'
    mem_limit: 17179869184
    environment:
        TZ: 'UTC'
        DRUG_DIV_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        DRUG_DIV_DB_SERVER: '10.1.1.1'
        DRUG_DIV_DATABASE: 'detectrx'
        DRUG_DIV_DB_USER: 'root'
        DRUG_DIV_RUN_LOAD: 'True'
        DRUG_DIV_LOAD_IMPORT_PATH: '/mnt/dataloadfiles/'
        DRUG_DIV_LOAD_LOG_PATH: '/mnt/log/drug_div_proc/data_load/'
        DRUG_DIV_ML_TRAINING: 'False'
        CLIENT_CODE: ${SITE_CODE}
        CLIENT_TEXT_DESCRIPTION: 'iatricSystems ${ENVIRONMENT} System'
        DATA_FEED: 'meditech'
        PRODUCT_PLATFORM: 'drug_div'
        _JAVA_OPTIONS: '-Xmx49152M'
        FASTLANE_BASE_URL: 'https://${HOST_FQDN}:44400'
        FASTLANE_USERNAME: 'ava.user'
        FASTLANE_PASSWORD: ${FASTLANE_PASSWORD}
        APPLICATION_API: 'https://fastlane:44400'
        APPLICATIONMANAGER_API: 'https://fastlane:44400'
        DOCKER_HOSTNAME: localhost
        DOCKER_HOSTIPADDR: '127.0.0.1'
        SOLOMON_DB_USERNAME: 'root'
        SOLOMON_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        SOLOMON_DB_NAME: 'solomon'
        SOLOMON_DB_HOSTNAME: 'solomon-db'
        SOLOMON_DB_DIALECT: 'mysql'
        SPARK_LOCAL_HOSTNAME: 'localhost'
        DRUG_DIV_DB_HOSTNAME: 'detectrx-db'
        PATH: '/usr/lib/spark-3.0.1-bin-hadoop2.7/bin/:/usr/lib/spark-3.0.1-bin-hadoop2.7/bin/:/usr/lib/spark-3.0.1-bin-hadoop2.7/sbin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
        TERM: xterm
        SPARK_VERSION: 3.0.1
        HADOOP_VERSION: 2.7
        SPARK_HOME: '/usr/lib/spark-3.0.1-bin-hadoop2.7'
        PYTHONPATH: '/usr/lib/spark-3.0.1-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip:/usr/lib/spark-3.0.1-bin-hadoop2.7/python:/usr/lib/spark-3.0.1-bin-hadoop2.7/python/build:'
        JAVA_HOME: '/usr/lib/jvm/java-1.8.0-openjdk-amd64'
        PRODUCTION: 
	  - SFTP_USERNAME: detectrx
        SFTP_PASSWORD: ${SFTP_PASSWORD}
        DRUG_DIV_DB_PORT: '3306'
        SCRIPT_INSIDE_DOCKER: '1'
    privileged: true
    depends_on:
      solomon-db:
        condition: service_healthy
      detectrx-db:
        condition: service_healthy
    volumes:
      - "all-logs-local:/mnt/log"
      - "solomon-data-volume-local:/mnt/solomon_data"
      - "dataloadfiles-local:/mnt/dataloadfiles"
      - "config-ini-volume-local:/mnt/config"
      - "./config:/mnt/src/solomon/core/solomon/de_config/configurations"
    working_dir: "/mnt/src/drug_div"
    ports:
      - "18081:18080"
      - "3500:3501"
      - "4041:4040"
      - "9801:9800"
    logging:
      driver: "json-file"
    restart: "always"
    networks:
      - "detectrx-subnet-local"
    healthcheck:
      test: ["CMD-SHELL", 'test $$(find /mnt/log/drug_div_proc/solomon/ -type f -mmin 5 | wc -c) -ne 0']
      interval: 60s
      timeout: 10s
      retries: 2
      start_period: 180s
  # --------------------------------------------------------------------------------------------
  detectrx-sftp:
    container_name: 'sftp-host'
    hostname: 'sftp-host'
    image: 'docker.iatric.com/detectrx-sftp:1.0.2.1'
    command:
      - "/entrypoint"
      - "detectrx:${SFTP_PASSWORD}:1001"
    environment:
      - "TZ=UTC"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "TERM=xterm"
    volumes:
      - "sftp-files-local:/iat/upload"
    ports:
      - "2222:22"
    logging:
      driver: "json-file"
    restart: "always"
    networks:
      - "detectrx-subnet-local"
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "localhost", "22"]
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 60s
  # --------------------------------------------------------------------------------------------
  detectrx-nginx:
    container_name: 'detectrx-nginx'
    hostname: 'detectrx-nginx'
    image: 'docker.iatric.com/detectrx-nginx:1.0.2.1'
    ports:
      - "3443:443"
    volumes:
      - "/home/fastlane/certificates:/etc/nginx/ssl/"
    restart: "always"
    depends_on:
      - "metabase"
    environment:
        NGINX_HOST: ${HOST_FQDN}
        NGINX_INSTANCE: ${NGINX_INSTANCE}
    command: /bin/sh -c "envsubst < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    networks:
      - "detectrx-subnet-local"
    healthcheck:
     test: "curl --insecure -f https://localhost/index.html || exit 1"
     interval: 60s
     timeout: 10s
     retries: 10
     start_period: 60s
  # --------------------------------------------------------------------------------------------
  metabase:
    container_name: 'metabase'
    hostname: 'metabase'
    image: 'registry.hub.docker.com/metabase/metabase:v0.41.7'
    environment:
      - "MD_DB_FILE=/home/metabase/metabase.db"
    ports:
      - "3000:3000"
    volumes:
      - "metabase-files-local:/metabase.db"
    restart: "always"
    networks:
      - "detectrx-subnet-local"
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "localhost", "3000"]
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 60s
  # --------------------------------------------------------------------------------------------
  detectrx-client:
    container_name: 'detectrx-client'
    hostname: 'detectrx-client'
    image: 'docker.iatric.com/detectrx-client:1.0.2.1'
    dns:
      - 192.168.0.9
    mem_limit: 17179869184
    ports:
      - "3001:3001"
      - "443:3001"
    environment:
        NODE_ENV: 'development'
        NODE_TLS_REJECT_UNAUTHORIZED: '0'
        APPLICATION_UUID: 'e65fa53d-c954-43f5-8c2c-a08456f11829'
        APPLICATION_API: 'https://${HOST_FQDN}:3001/api'
        APPLICATION_NAME: 'DRUGDIVERSION'
        APPLICATION_URL: 'https://${HOST_FQDN}:3001/'
        APPLICATIONMANAGER_API: 'https://fastlane:44400/api'
        APPLICATIONMANAGER_API_CLIENT: 'https://${HOST_FQDN}:44400/api'
        DB_DIALECT: 'mysql'
        DB_HOSTNAME: 'detectrx-db'
        DB_LOGGING: '0'
        DB_NAME: 'detectrx'
        DB_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
        DB_PORT: '3306'
        DB_USERNAME: 'root'
        X_AUTH_TOKEN_SECRET: ${TOKEN_SECRET}
        X_AUTH_TOKEN_EXPIRATION: '15'
        X_AUTH_REFRESH_TOKEN_SECRET: ${TOKEN_SECRET}
        X_AUTH_RERESH_TOKEN_EXPIRATION: '480'
    restart: "always"
    volumes:
      - "dataloadfiles-local:/mnt/dataloadfiles" # We want to be able to look at the solomon-drug-div import errors and ddhold files
      - "/home/fastlane/certificates:/app/certificates"
    networks:
      - "detectrx-subnet-local"
    depends_on:
      detectrx-db:
        condition: service_healthy
      fastlane:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "localhost", "3001"]
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 60s
  # --------------------------------------------------------------------------------------------
  detectrx-ava-client:
    container_name: 'detectrx-ava-client'
    hostname: 'detectrx-ava-client'
    image: 'docker.iatric.com/detectrx-ava-client:1.0.2.1'
    mem_limit: 17179869184
    ports:
      - "3002:3001"
    depends_on:
      solomon-db:
        condition: service_healthy
      detectrx-db:
        condition: service_healthy
    environment:
      NODE_ENV: 'development'
      NODE_TLS_REJECT_UNAUTHORIZED: '0'
      APPLICATION_UUID: 0a3625f8-ae53-4428-866a-928e29bf6327
      APPLICATION_API: https://${HOST_FQDN}:3002/api
      APPLICATION_NAME: AVA
      APPLICATION_URL: https://${HOST_FQDN}:3002/
      APPLICATIONMANAGER_API: https://fastlane:44400/api
      APPLICATIONMANAGER_API_CLIENT: https://${HOST_FQDN}:44400/api
      X_AUTH_TOKEN_SECRET: ${TOKEN_SECRET}
      X_AUTH_TOKEN_EXPIRATION: '15'
      X_AUTH_REFRESH_TOKEN_SECRET: ${TOKEN_SECRET}
      X_AUTH_RERESH_TOKEN_EXPIRATION: '480'
      SOLOMON_DB_DIALECT: 'mysql'
      SOLOMON_DB_HOSTNAME: 'solomon-db'
      SOLOMON_DB_LOGGING: 'false'
      SOLOMON_DB_NAME: 'solomon'
      SOLOMON_DB_PASSWORD: ${MYSQL_SOLOMON_DB_PASSWORD}
      SOLOMON_DB_PORT: '3306'
      SOLOMON_DB_USERNAME: 'root'
      PRODUCT_DB_DIALECT: 'mysql'
      PRODUCT_DB_HOSTNAME: 'detectrx-db'
      PRODUCT_DB_LOGGING: 'false'
      PRODUCT_DB_NAME: 'detectrx'
      PRODUCT_DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PRODUCT_DB_PORT: '3306'
      PRODUCT_DB_USERNAME: 'root'
      PRODUCT_PLATFORM: 'drug_div'
    restart: 'always'
    networks:
      - "detectrx-subnet-local"
    volumes:
      - "/home/fastlane/certificates:/app/certificates"
    depends_on:
      detectrx-db:
        condition: service_healthy
      fastlane:
        condition: service_healthy
    healthcheck:
      #test: "curl -f fastlane:44400/api"
      test: ["CMD", "nc", "-z", "-v", "localhost", "3001"]
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 60s
  # --------------------------------------------------------------------------------------------
  fastlane:
    container_name: 'fastlane'
    hostname: 'fastlane'
    image: 'docker.iatric.com/fastlane:v2.1.3-alpine'
    ports:
      - "44400:44400"
    environment:
        APPLICATION_UUID: ef38f527-7e47-a978-cd4c51789a52
        APPLICATION_NAME: Fastlane
        APPLICATION_API: https://fastlane:44400/api
        APPLICATION_API_CLIENT: https://${HOST_FQDN}:44400/api
        APPLICATIONMANAGER_API: https://fastlane:44400/api
        APPLICATIONMANAGER_API_CLIENT: https://${HOST_FQDN}:44400/api
        APPLICATION_URL: https://${HOST_FQDN}:44400/
        APPLICATION_VERSION: 1.3.0
        APPLICATION_COPYRIGHT: 2022
        NODE_ENV: ${ENVIRONMENT}
        PORT: 44400
        PFX_PASSPHRASE: ewtNeRa2rDhpPNDLr8DNrmG7bQugvkb5
        NODE_TLS_REJECT_UNAUTHORIZED: 0
        DB_USERNAME: 'root'
        DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        DB_NAME: 'fastlane'
        DB_HOSTNAME: 'detectrx-fastlane-db'
        DB_PORT: '3306'
        DB_DIALECT: 'mysql'
        DB_LOGGING: 0
        X_AUTH_TOKEN_SECRET: ${TOKEN_SECRET}
        X_AUTH_TOKEN_EXPIRATION: 15
        X_AUTH_REFRESH_TOKEN_SECRET: ${TOKEN_SECRET}
        X_AUTH_REFRESH_TOKEN_EXPIRATION: 480
        ICONNECT_SITECODE: ${SITE_CODE}
    restart: "always"
    volumes:
      - "/home/fastlane/certificates:/app/certificates"
    depends_on:
      detectrx-fastlane-db:
        condition: service_healthy
    networks:
      - "detectrx-subnet-local"
    healthcheck:
      #test: "curl -f fastlane:44400/api"
      test: ["CMD", "nc", "-z", "-v", "localhost", "44400"]
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 60s
  # --------------------------------------------------------------------------------------------
  detectrx-fastlane-db:
    container_name: 'detectrx-fastlane-db'
    hostname: detectrx-fastlane-db
    image: 'docker.iatric.com/detectrx-fastlane-db:1.0.2.1'
    environment:
        TZ: UTC
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_TCP_PORT: 3306
    volumes:
      - "detectrx-fastlane-db:/var/lib/mysql"
    ports:
      - "3326:3306"
    logging:
      driver: "json-file"
    restart: "always"
    networks:
      - "detectrx-subnet-local"
    healthcheck:
      test: ["CMD-SHELL", 'mysql --database=fastlane --password=${MYSQL_ROOT_PASSWORD} --execute="SELECT count(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B']
      interval: 60s
      timeout: 10s
      retries: 10
      start_period: 60s

# **********************************************************************************************
networks:
  detectrx-subnet-local:
    external: false
# **********************************************************************************************
volumes:
  all-logs-local:
    external: false
  solomon-config-volume-local:
    external: false
  solomon-data-volume-local:
    external: false
  config-ini-volume-local:
    external: false
  dataloadfiles-local:
    external: false
  config-ini-solomon-local:
    external: false
  solomon-db-files-local:
    external: false
  db-backup-solomon-local:
    external: false
  sftp-files-local:
    external: false
  metabase-files-local:
    external: false
  detectrx-db:
    external: false
  detectrx-fastlane-db:
    external: false
